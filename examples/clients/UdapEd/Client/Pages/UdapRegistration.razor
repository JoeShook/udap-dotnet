@page "/udapRegistration"
@using UdapEd.Shared


<ErrorBoundary @ref="ErrorBoundary">
  <ChildContent>

    <MudGrid Class="mt-4">
      <MudItem xs="12" sm="12" md="12">
        <MudText Typo="Typo.h4">Udap Registration</MudText>
        <MudLink Href="/udapDiscovery" Color="Color.Info"> [ @RequestUrl.GetWellKnownUdap(AppState.BaseUrl, AppState.Community ) ]</MudLink>
      </MudItem>
      <MudItem xs="12" sm="12" md="12">

        <MudItem>
          <MudSelect @bind-Value="Oauth2Flow"
                     Label="Select OAuth2Flow Flow"
                     Placeholder="Please Select"
                     AdornmentIcon="@Icons.Material.Outlined.ArrowDropDown"
                     AdornmentColor="Color.Primary"
                     Variant="Variant.Outlined">
                        @foreach (Oauth2FlowEnum item in Enum.GetValues(typeof(Oauth2FlowEnum)))
                        {
                <MudSelectItem Value="@item">@item</MudSelectItem>
                        }
          </MudSelect>
        </MudItem>

        <MudButton Class="mt-3"
                   Color="Color.Primary"
                   ButtonType="ButtonType.Button"
                   Variant="Variant.Filled"
                   Disabled="@(! AppState.CertificateLoaded)"
                   OnClick="BuildRawSoftwareStatement">

                    @if (AppState.Oauth2Flow == Oauth2FlowEnum.authorization_code)
                    {
              <p>Build authorization_code request. (header and raw software statement)</p>
                    }
                    else
                    {
              <p>Build client_credentials request. (header and raw software statement)</p>
                    }

        </MudButton>

        <MudSpacer />

        <MudGrid Spacing="1" Class="mt-8">
          <MudItem xs="7">
            <MudPaper Class="pa-4 ma-2" Elevation="3">
              <MudText Align="Align.Right" Color="Color.Tertiary">Raw Software Statement</MudText>
              <pre Class="@ValidRawSoftwareStatementStyle">[</pre>
              <InputTextArea id="StatementHeader"
                             Class="@ValidRawSoftwareStatementStyle"
                             rows="@(SoftwareStatementBeforeEncodingHeader.Count(s => s == '\n' ) + 5)"
                             @bind-Value="SoftwareStatementBeforeEncodingHeader" />,
              <InputTextArea Class="@ValidRawSoftwareStatementStyle"
                             rows="@(SoftwareStatementBeforeEncodingSoftwareStatement.Count(s => s == '\n' ) + 1)"
                             @bind-Value="SoftwareStatementBeforeEncodingSoftwareStatement"
                             @onfocusout="PersistSoftwareStatement" />
              <pre Class="@ValidRawSoftwareStatementStyle">]</pre>
            </MudPaper>
          </MudItem>
          <MudItem xs="5">
            <MudPaper Class="pa-4 ma-2" Elevation="3">
              <MudText Align="Align.Right" Color="Color.Tertiary">x509 certificates from x5c</MudText>
              <CertificateViewer JwtHeaderWithx5c="@SoftwareStatementBeforeEncodingHeader" />
            </MudPaper>
          </MudItem>
        </MudGrid>


        <MudButton Class="mt-3" 
                   Color="Color.Primary"
                   ButtonType="ButtonType.Button"
                   Variant="Variant.Filled"
                   Disabled="@(! AppState.CertificateLoaded)"
                   OnClick="BuildRequestBody">Build Request Body</MudButton>

        <MudGrid Spacing="1" Class="mt-8">
          <MudItem xs="7">
            <MudPaper Class="pa-4 ma-2" Elevation="3">
              <MudText Align="Align.Right" Color="Color.Tertiary">Request Body</MudText>
              <pre>@RequestBody</pre>
            </MudPaper>
          </MudItem>
          <MudItem xs="5">
            <MudPaper Class="pa-4 ma-2" Elevation="3">
              <MudText Align="Align.Right" Color="Color.Tertiary">Explanation Todo</MudText>
              <SignedJwtViewer Title="<b>Decoded software_statement::</b>"
                               SignedSoftwareStatement="@AppState.UdapRegistrationRequest?.SoftwareStatement" />
            </MudPaper>
          </MudItem>

        </MudGrid>

        <MudButton Class="mt-3" 
                   Color="Color.Primary" 
                   ButtonType="ButtonType.Button"
                   Variant="Variant.Filled"
                   Disabled="@(! AppState.CertificateLoaded)"
                   OnClick="PerformRegistration">Register (DCR)</MudButton>

        <MudGrid Spacing="1" Class="mt-8">
          <MudItem xs="7">
            <MudPaper Class="pa-4 ma-2" Elevation="3">
              <MudText Align="Align.Right" Color="Color.Tertiary">Registration Response</MudText>
              <pre>@RegistrationResult</pre>
            </MudPaper>
          </MudItem>
          <MudItem xs="5">
            <MudPaper Class="pa-4 ma-2" Elevation="3">
              <MudText Align="Align.Right" Color="Color.Tertiary">Explanation Todo</MudText>
              <pre>
<a href="http://hl7.org/fhir/us/udap-security/registration.html#request-body">Per UDAP Security IG</a> 
If a new registration is successful, the Authorization Server SHALL return a registration response with a 201 Created HTTP response code as per Section 5.1 of UDAP Dynamic Client Registration, including the unique client_id assigned by the Authorization Server to that client app. If a new registration is not successful, e.g. it is rejected by the server for any reason, the Authorization Server SHALL return an error response as per <a href="https://www.udap.org/udap-dynamic-client-registration-stu1.html#section-5.1">Section 5.2</a> of UDAP Dynamic Client Registration.

<a href="https://www.udap.org/udap-dynamic-client-registration-stu1.html#section-6">For Modifying or Cancelling previous registration see section 6</a>

<br />
</pre>
              <SignedJwtViewer Title="<b>Decoded software_statement::</b>" SignedSoftwareStatement="@AppState.RegistrationDocument?.SoftwareStatement"></SignedJwtViewer>
            </MudPaper>
          </MudItem>
        </MudGrid>
      </MudItem>
    </MudGrid>


  </ChildContent>
  <ErrorContent Context="ex">
    <pre class="blazor-error-boundary">
            @ex.Message
      </pre>
  </ErrorContent>
</ErrorBoundary>